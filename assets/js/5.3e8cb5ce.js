(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{363:function(t,v,r){t.exports=r.p+"assets/img/num-convert-bool.65258f86.png"},364:function(t,v,r){t.exports=r.p+"assets/img/Java-force-type-convert.cbbacb68.png"},365:function(t,v,r){t.exports=r.p+"assets/img/dynamic-js.c6ff9b7f.png"},399:function(t,v,r){"use strict";r.r(v);var _=r(44),a=Object(_.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"重塑类型思维"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重塑类型思维"}},[t._v("#")]),t._v(" 重塑类型思维")]),t._v(" "),_("h2",{attrs:{id:"类型思维的缺失"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型思维的缺失"}},[t._v("#")]),t._v(" 类型思维的缺失")]),t._v(" "),_("p",[t._v("我们知道 JavaScript 是类型是一门"),_("strong",[t._v("动态弱类型语言")]),t._v("，与此对应就有"),_("strong",[t._v("静态强类型")]),t._v("语言，例如大家熟知的 C 与 Java 等。JavaScript 作为一门 "),_("strong",[t._v("动态弱类型语言")]),t._v("，其简单灵活是它最大的特点，但是长期在这种环境下编程，给我们造成的一大遗憾就是"),_("strong",[t._v("类型思维的缺失")]),t._v("。")]),t._v(" "),_("p",[t._v("随着现代软硬件的升级，不同以往，前端的项目也越做越大，这种遗憾就变成了无法忍受的痛点，现在项目急需静态类型检查，相应的前端开发者也要重塑类型思维，面对日益变化的前端环境。")]),t._v(" "),_("p",[t._v("在静态类型检查方面：")]),t._v(" "),_("p",[t._v("2014 年 Facebook 推出了 Flow ，同年 Microsoft 也推出了 TypeScript，早期 Flow 明显暂了上风，包括 Vue、React、Jest、Yarn 等前端流行框架和工具都是用 Flow 来写的，但是经过这么多年的发展，很明显 TypeScript 完美胜出。")]),t._v(" "),_("p",[t._v("什么是 TypeScript？")]),t._v(" "),_("blockquote",[_("p",[t._v("根据官方的定义：拥有类型系统的 JavaScipt 超集。")])]),t._v(" "),_("p",[t._v("具体点体现在三个方面：")]),t._v(" "),_("ul",[_("li",[t._v("类型检查")]),t._v(" "),_("li",[t._v("语言扩展")]),t._v(" "),_("li",[t._v("工具属性")])]),t._v(" "),_("p",[t._v("TypeScript 对我们的好处，除了上面讲到的重塑类型思维，还有个你无法拒绝的优点，TypeScript 会让我们"),_("strong",[t._v("由代码的编写者，变为代码的设计者")]),t._v("，这非常重要。")]),t._v(" "),_("p",[t._v("在我们进入学习 TypeScript 之前，我还想和你唠唠"),_("strong",[t._v("强类型与弱类型")]),t._v("和"),_("strong",[t._v("动态类型与静态类型")]),t._v("的区别。")]),t._v(" "),_("h2",{attrs:{id:"强类型与弱类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#强类型与弱类型"}},[t._v("#")]),t._v(" 强类型与弱类型")]),t._v(" "),_("p",[t._v("强类型语言：不允许改变变量的类型，除非进行强制类型转换。"),_("br"),t._v("\n弱类型语言：变量可以赋值给不同的数据类型。")]),t._v(" "),_("p",[t._v("强类型语言演示：Java")]),t._v(" "),_("p",[_("img",{attrs:{src:r(363),alt:"boolean 不能赋值给 int 类型"}})]),t._v(" "),_("p",[t._v("除非强制类型转化：")]),t._v(" "),_("p",[_("img",{attrs:{src:r(364),alt:"字符 a 的 ASCII 是 97"}})]),t._v(" "),_("p",[t._v("Java 在线演示网址：https://tool.lu/coderunner/")]),t._v(" "),_("p",[t._v("弱类型语言演示：JS")]),t._v(" "),_("p",[_("img",{attrs:{src:r(365),alt:"变量可以随意赋值"}})]),t._v(" "),_("p",[t._v("更直观的解释是，强类型变量和值都有类型，弱类型只有值有类型，变量没类型。")]),t._v(" "),_("h2",{attrs:{id:"动态类型与静态类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态类型与静态类型"}},[t._v("#")]),t._v(" 动态类型与静态类型")]),t._v(" "),_("p",[t._v("静态类型语言：在"),_("strong",[t._v("编译阶段")]),t._v("确定所有变量的类型。"),_("br"),t._v("\n动态类型语言：在"),_("strong",[t._v("执行阶段")]),t._v("确定所有变量的类型。")]),t._v(" "),_("h2",{attrs:{id:"护身符-🧿"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#护身符-🧿"}},[t._v("#")]),t._v(" 护身符 🧿")]),t._v(" "),_("p",[t._v("学习 TypeSccript 可能会有各种困难，送你个护身符，死死的记住这句话在 TypeScript 中：")]),t._v(" "),_("div",{staticClass:"life-preserver"},[t._v("一切皆是类型")]),t._v(" "),_("style",{attrs:{lang:"stylus",scoped:""}},[t._v(" \n    .life-preserver {\n        line-height: 300px;\n        text-align: center;\n        background-color: #7c7cdc;\n        color: white;\n        border-radius: 0.2em;\n        font-size: 2em;\n        letter-spacing: 0.2em;\n    }\n")])])}),[],!1,null,null,null);v.default=a.exports}}]);